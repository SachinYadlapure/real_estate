{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _classnames = require('classnames');\nvar _classnames2 = _interopRequireDefault(_classnames);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _server = require('react-dom/server');\nvar _server2 = _interopRequireDefault(_server);\nrequire('./ReactBingmaps.css');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar map = {},\n  Microsoft,\n  infobox = {},\n  scriptURL = \"https://www.bing.com/api/maps/mapcontrol?callback=bingmapsCallback\",\n  pendingProps = [];\nvar ReactBingmaps = function (_Component) {\n  _inherits(ReactBingmaps, _Component);\n  function ReactBingmaps(props) {\n    _classCallCheck(this, ReactBingmaps);\n    var _this = _possibleConstructorReturn(this, (ReactBingmaps.__proto__ || Object.getPrototypeOf(ReactBingmaps)).call(this, props));\n    if (document.querySelector('script[src=\"' + scriptURL + '\"]') === null) {\n      _this.loadScript(scriptURL);\n      window.bingmapsCallback = function () {\n        Microsoft = window.Microsoft;\n        this.afterDependencyLoad(pendingProps);\n      }.bind(_this);\n    }\n    return _this;\n  }\n  _createClass(ReactBingmaps, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (Microsoft === null || Microsoft === undefined) {\n        pendingProps.push(this.props);\n      } else {\n        this.reactBingmaps(this.props, Microsoft);\n      }\n    }\n  }, {\n    key: 'afterDependencyLoad',\n    value: function afterDependencyLoad(pendingProps) {\n      var _this2 = this;\n      try {\n        pendingProps.map(function (props) {\n          return _this2.reactBingmaps(props, Microsoft);\n        });\n      } catch (exception) {\n        console.log(\"Error loading Microsoft bingmaps\");\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      try {\n        var mapReference = this.props.id ? '#' + this.props.id : '.react-bingmaps';\n        if (map[mapReference])\n          //map[mapReference].dispose();\n\n          map[mapReference] = undefined;\n        infobox = {};\n        pendingProps = [];\n      } catch (exception) {\n        console.log(exception);\n      }\n    }\n  }, {\n    key: 'loadScript',\n    value: function loadScript(url) {\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.defer = true;\n      script.src = url;\n      document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var mapReference = nextProps.id ? '#' + nextProps.id : '.react-bingmaps';\n      if (this.props.center.join() !== nextProps.center.join()) {\n        this.setMapCenter(nextProps.center, mapReference);\n      }\n      if (this.props.zoom !== nextProps.zoom) {\n        this.setMapZoom(nextProps.zoom, mapReference);\n      }\n      if (this.props.mapTypeId !== nextProps.mapTypeId) {\n        this.setMapTypeId(nextProps.mapTypeId, nextProps.center, nextProps.heading, mapReference);\n      }\n      if (this.props.navigationBarMode !== nextProps.navigationBarMode) {\n        this.setMapNavigationBarMode(nextProps.navigationBarMode, mapReference);\n      }\n      if (this.props.supportedMapTypes !== nextProps.supportedMapTypes) {\n        this.setMapSupportedMapTypes(nextProps.supportedMapTypes, mapReference);\n      }\n      if (this.props.disableStreetside !== nextProps.disableStreetside) {\n        this.setDisableStreetside(nextProps.disableStreetside, mapReference);\n      }\n      if (this.props.pushPins !== nextProps.pushPins) {\n        this.setPushPins(nextProps.pushPins, mapReference);\n      }\n      if (this.props.infoboxes !== nextProps.infoboxes) {\n        this.setInfoboxes(nextProps.infoboxes, \"infoboxes\", mapReference);\n      }\n      if (this.props.infoboxesWithPushPins !== nextProps.infoboxesWithPushPins) {\n        this.setInfoboxesWithPushPins(nextProps.infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n      }\n      if (this.props.regularPolygons !== nextProps.regularPolygons) {\n        this.createRegularPolygons(nextProps.regularPolygons, mapReference);\n      }\n      if (this.props.boundary !== nextProps.boundary) {\n        this.setBoundary(nextProps.boundary, mapReference);\n      }\n      if (this.props.mapOptions !== nextProps.mapOptions) {\n        this.setMapOptions(nextProps.mapOptions, mapReference);\n      }\n      if (this.props.polyline !== nextProps.polyline) {\n        this.setPolyline(nextProps.polyline, mapReference);\n      }\n      if (this.props.directions !== nextProps.directions) {\n        this.setDirections(nextProps.directions, mapReference);\n      }\n    }\n  }, {\n    key: 'reactBingmaps',\n    value: function reactBingmaps(props, Microsoft) {\n      var bingmapKey = props.bingmapKey,\n        center = props.center,\n        mapTypeId = props.mapTypeId,\n        zoom = props.zoom,\n        navigationBarMode = props.navigationBarMode,\n        supportedMapTypes = props.supportedMapTypes,\n        heading = props.heading,\n        pushPins = props.pushPins,\n        disableStreetside = props.disableStreetside,\n        infoboxes = props.infoboxes,\n        infoboxesWithPushPins = props.infoboxesWithPushPins,\n        getLocation = props.getLocation,\n        regularPolygons = props.regularPolygons,\n        boundary = props.boundary,\n        mapOptions = props.mapOptions,\n        polyline = props.polyline,\n        directions = props.directions,\n        mapHandlers = props.mapHandlers;\n      if (bingmapKey && Microsoft) {\n        var mapReference = props.id ? '#' + props.id : '.react-bingmaps';\n        if (!map[mapReference]) {\n          map[mapReference] = new Microsoft.Maps.Map(mapReference, {\n            credentials: bingmapKey\n          });\n        }\n        this.setMapCenter(center, mapReference);\n        this.setMapTypeId(mapTypeId, center, heading, mapReference);\n        this.setMapZoom(zoom, mapReference);\n        this.setMapNavigationBarMode(navigationBarMode, mapReference);\n        this.setMapSupportedMapTypes(supportedMapTypes, mapReference);\n        this.setDisableStreetside(disableStreetside, mapReference);\n        this.setPushPins(pushPins, mapReference);\n        this.setInfoboxes(infoboxes, \"infoboxes\", mapReference);\n        this.setInfoboxesWithPushPins(infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n        this.setGetLocation(getLocation, mapReference);\n        this.createRegularPolygons(regularPolygons, mapReference);\n        this.setBoundary(boundary, mapReference);\n        this.setMapOptions(mapOptions, mapReference);\n        this.setPolyline(polyline, mapReference);\n        this.setDirections(directions, mapReference);\n        this.setMapHandlers(mapHandlers, mapReference);\n      }\n    }\n  }, {\n    key: 'setMapCenter',\n    value: function setMapCenter(center, mapReference) {\n      if (map[mapReference] && center && center[0] && center[1]) {\n        map[mapReference].setView({\n          center: new Microsoft.Maps.Location(center[0], center[1])\n        });\n      }\n    }\n  }, {\n    key: 'setMapTypeId',\n    value: function setMapTypeId(mapTypeId, center, heading, mapReference) {\n      if (map[mapReference] && mapTypeId) {\n        var isBirdEyeAvailable = false;\n        if (mapTypeId === \"birdseye\" && center && center[0] && center[1]) {\n          var location = new Microsoft.Maps.Location(center[0], center[1]);\n          Microsoft.Maps.getIsBirdseyeAvailable(location, Microsoft.Maps.Heading[heading], function (onResponse) {\n            isBirdEyeAvailable = onResponse;\n          });\n        }\n        if (mapTypeId) {\n          map[mapReference].setView({\n            mapTypeId: isBirdEyeAvailable ? Microsoft.Maps.MapTypeId.birdseye : Microsoft.Maps.MapTypeId[mapTypeId]\n          });\n        }\n      }\n    }\n  }, {\n    key: 'setMapZoom',\n    value: function setMapZoom(zoom, mapReference) {\n      if (map[mapReference] && zoom) {\n        map[mapReference].setView({\n          zoom: zoom\n        });\n      }\n    }\n  }, {\n    key: 'setMapNavigationBarMode',\n    value: function setMapNavigationBarMode(navigationBarMode, mapReference) {\n      if (map[mapReference] && navigationBarMode) {\n        map[mapReference].setView({\n          navigationBarMode: navigationBarMode\n        });\n      }\n    }\n  }, {\n    key: 'setMapSupportedMapTypes',\n    value: function setMapSupportedMapTypes(supportedMapTypes, mapReference) {\n      if (map[mapReference] && supportedMapTypes) {\n        map[mapReference].setView({\n          supportedMapTypes: supportedMapTypes.map(function (id) {\n            return Microsoft.Maps.MapTypeId[id];\n          })\n        });\n      }\n    }\n  }, {\n    key: 'setDisableStreetside',\n    value: function setDisableStreetside(disableStreetside, mapReference) {\n      if (map[mapReference] && disableStreetside) {\n        map[mapReference].setView({\n          disableStreetside: disableStreetside\n        });\n      }\n    }\n  }, {\n    key: 'setPushPins',\n    value: function setPushPins(pushPins, mapReference) {\n      if (map[mapReference] && pushPins) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var pushpin = map[mapReference].entities.get(i);\n          if (pushpin instanceof Microsoft.Maps.Pushpin) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n        for (var pushPinIndex = 0; pushPinIndex < pushPins.length; pushPinIndex++) {\n          if (pushPins[pushPinIndex].location && pushPins[pushPinIndex].location[0] && pushPins[pushPinIndex].location[1]) {\n            var location = new Microsoft.Maps.Location(pushPins[pushPinIndex].location[0], pushPins[pushPinIndex].location[1]);\n            var option = pushPins[pushPinIndex].option ? pushPins[pushPinIndex].option : null;\n            if (option && option.anchor && option.anchor[0] && option.anchor[1]) {\n              option.anchor = new Microsoft.Maps.Point(option.anchor[0], option.anchor[1]);\n            }\n            var _pushpin = new Microsoft.Maps.Pushpin(location, option);\n            map[mapReference].entities.push(_pushpin);\n            if (pushPins[pushPinIndex].addHandler) {\n              Microsoft.Maps.Events.addHandler(_pushpin, pushPins[pushPinIndex].addHandler.type, function (callback, data) {\n                this.MakeCallback(callback, data);\n              }.bind(this, pushPins[pushPinIndex].addHandler.callback, pushPins[pushPinIndex].addHandler.callbackData));\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxes',\n    value: function setInfoboxes(infoboxes, infoboxCreateType, mapReference) {\n      if (map[mapReference] && infoboxes) {\n        for (var i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n          infobox[infoboxCreateType][i].setMap(null);\n        }\n        infobox[infoboxCreateType] = [];\n        if (infoboxes) {\n          for (var infoboxIndex = 0; infoboxIndex < infoboxes.length; infoboxIndex++) {\n            if (infoboxes[infoboxIndex].location && infoboxes[infoboxIndex].location[0] && infoboxes[infoboxIndex].location[1]) {\n              var location = new Microsoft.Maps.Location(infoboxes[infoboxIndex].location[0], infoboxes[infoboxIndex].location[1]);\n              var option = infoboxes[infoboxIndex] ? infoboxes[infoboxIndex].option : null;\n              if (option.htmlContent) {\n                option.htmlContent = _server2.default.renderToStaticMarkup(option.htmlContent);\n              }\n              infobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, option));\n              infobox[infoboxCreateType][infoboxIndex].setMap(map[mapReference]);\n              if (infoboxes[infoboxIndex].addHandler) {\n                Microsoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxIndex], infoboxes[infoboxIndex].addHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxes[infoboxIndex].addHandler.callback, infoboxes[infoboxIndex].addHandler.callbackData));\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxesWithPushPins',\n    value: function setInfoboxesWithPushPins(infoboxesWithPushPins, infoboxCreateType, mapReference) {\n      if (map[mapReference] && infoboxesWithPushPins) {\n        //Remove existing Infoboxes\n        var i;\n        for (i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n          infobox[infoboxCreateType][i].setMap(null);\n        }\n\n        //Remove existing Pushpins\n        for (i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var pushpin = map[mapReference].entities.get(i);\n          if (pushpin instanceof Microsoft.Maps.Pushpin) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n        infobox[infoboxCreateType] = [];\n\n        //Add Infoboxes with Pushpins\n        if (infoboxesWithPushPins) {\n          for (var infoboxWithPushPinIndex = 0; infoboxWithPushPinIndex < infoboxesWithPushPins.length; infoboxWithPushPinIndex++) {\n            if (infoboxesWithPushPins[infoboxWithPushPinIndex].location) {\n              //Set Location\n              var location = new Microsoft.Maps.Location(infoboxesWithPushPins[infoboxWithPushPinIndex].location[0], infoboxesWithPushPins[infoboxWithPushPinIndex].location[1]);\n\n              //Set Infobox Option\n              var infoboxOption = infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption : null;\n\n              //ConvertToHtml if Obj\n              if (infoboxOption.htmlContent) {\n                infoboxOption.htmlContent = _server2.default.renderToStaticMarkup(infoboxOption.htmlContent);\n              }\n\n              //If Handler added, initially hide Infobox\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n                infoboxOption[\"visible\"] = false;\n              }\n\n              //Set Pushpin Option\n              var pushPinOption = infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption : null;\n\n              //Initilize if anchor for Pushpin\n              if (pushPinOption.anchor && pushPinOption.anchor[0] && pushPinOption.anchor[1]) {\n                pushPinOption.anchor = new Microsoft.Maps.Point(pushPinOption.anchor[0], pushPinOption.anchor[1]);\n              }\n\n              //Set Infobox\n              infobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, infoboxOption));\n              infobox[infoboxCreateType][infoboxWithPushPinIndex].setMap(map[mapReference]);\n\n              //Set Infobox Callback if any\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler) {\n                Microsoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callbackData));\n              }\n\n              //Set Pushpin\t\t\t\t\n              var _pushpin2 = new Microsoft.Maps.Pushpin(location, pushPinOption);\n              map[mapReference].entities.push(_pushpin2);\n\n              //Set Pushpin Callback if any\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler) {\n                Microsoft.Maps.Events.addHandler(_pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callbackData));\n              }\n\n              //Set InfoboxesWithPushPins handler if any\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n                this.setInfoboxesWithPushPinsHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], _pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setGetLocation',\n    value: function setGetLocation(getLocation, mapReference) {\n      if (map[mapReference] && getLocation) {\n        if (getLocation.addHandler) {\n          Microsoft.Maps.Events.addHandler(map[mapReference], getLocation.addHandler, function (callback, e) {\n            if (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n              var point = new Microsoft.Maps.Point(e.getX(), e.getY());\n              var location = e.target.tryPixelToLocation(point);\n              this.MakeCallback(callback, location);\n            } else {\n              this.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n            }\n          }.bind(this, getLocation.callback));\n        } else {\n          Microsoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n            if (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n              var point = new Microsoft.Maps.Point(e.getX(), e.getY());\n              var location = e.target.tryPixelToLocation(point);\n              this.MakeCallback(callback, location);\n            } else {\n              this.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n            }\n          }.bind(this, getLocation.callback));\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxesWithPushPinsHandler',\n    value: function setInfoboxesWithPushPinsHandler(infobox, pushpin, addHandler, mapReference) {\n      if (addHandler === \"mouseover\") {\n        Microsoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n          infobox.setOptions({\n            visible: true\n          });\n        });\n        Microsoft.Maps.Events.addHandler(pushpin, \"mouseout\", function () {\n          infobox.setOptions({\n            visible: false\n          });\n        });\n      } else {\n        Microsoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n          infobox.setOptions({\n            visible: true\n          });\n        });\n      }\n    }\n  }, {\n    key: 'MakeCallback',\n    value: function MakeCallback(callback, data, mapReference) {\n      data ? callback(data) : callback();\n    }\n  }, {\n    key: 'createRegularPolygons',\n    value: function createRegularPolygons(regularPolygons, mapReference) {\n      if (map[mapReference] && regularPolygons) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var regularPolygon = map[mapReference].entities.get(i);\n          if (regularPolygon instanceof Microsoft.Maps.Polygon) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n        for (var regularPolygonIndex = 0; regularPolygonIndex < regularPolygons.length; regularPolygonIndex++) {\n          if (regularPolygons[regularPolygonIndex].center && regularPolygons[regularPolygonIndex].center[0] && regularPolygons[regularPolygonIndex].center[1]) {\n            (function () {\n              var location = new Microsoft.Maps.Location(regularPolygons[regularPolygonIndex].center[0], regularPolygons[regularPolygonIndex].center[1]);\n              var radius = regularPolygons[regularPolygonIndex].radius ? regularPolygons[regularPolygonIndex].radius : 0;\n              var points = regularPolygons[regularPolygonIndex].points ? regularPolygons[regularPolygonIndex].points : 0;\n              var option = regularPolygons[regularPolygonIndex].option ? regularPolygons[regularPolygonIndex].option : {};\n              Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function () {\n                var locations = Microsoft.Maps.SpatialMath.getRegularPolygon(location, radius, points, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);\n                var polygon = new Microsoft.Maps.Polygon(locations, option);\n                map[mapReference].entities.push(polygon);\n              });\n            })();\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setBoundary',\n    value: function setBoundary(boundary, mapReference) {\n      if (map[mapReference] && boundary) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var regularPolygon = map[mapReference].entities.get(i);\n          if (regularPolygon instanceof Microsoft.Maps.Polygon) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n\n        // var boundaryLocation;\n        // if(boundary.option && \n        // \tboundary.option.entityType && \n        // \t\t!(boundary.option.entityType.includes(\"Postcode\"))){\n        // \tboundaryLocation = new Microsoft.Maps.Location(boundary.location[0], boundary.location[1]);\n        // }\n        // else{\n        // \tboundaryLocation = boundary.location\n        // }\n\n        var boundaryLocation = boundary.location ? boundary.location : null;\n        var geoDataRequestOptions = boundary.option ? boundary.option : {};\n        var polygonStyle = boundary.polygonStyle ? boundary.polygonStyle : null;\n        var search = boundary.search ? boundary.search : null;\n        if (!search && boundaryLocation) {\n          Microsoft.Maps.loadModule('Microsoft.Maps.SpatialDataService', function () {\n            Microsoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(boundaryLocation, geoDataRequestOptions, map[mapReference], function (data) {\n              if (data.results && data.results.length > 0) {\n                map[mapReference].entities.push(data.results[0].Polygons);\n              }\n            }, polygonStyle, function errCallback(networkStatus, statusMessage) {\n              console.log(networkStatus);\n              console.log(statusMessage);\n            });\n          });\n        } else {\n          Microsoft.Maps.loadModule(['Microsoft.Maps.SpatialDataService', 'Microsoft.Maps.Search'], function () {\n            var searchManager = new Microsoft.Maps.Search.SearchManager(map[mapReference]);\n            var geocodeRequest = {\n              where: search,\n              callback: function callback(geocodeResult) {\n                if (geocodeResult && geocodeResult.results && geocodeResult.results.length > 0) {\n                  map[mapReference].setView({\n                    bounds: geocodeResult.results[0].bestView\n                  });\n                  Microsoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(geocodeResult.results[0].location, geoDataRequestOptions, map[mapReference], function (data) {\n                    if (data.results && data.results.length > 0) {\n                      map[mapReference].entities.push(data.results[0].Polygons);\n                    }\n                  }, polygonStyle, function errCallback(networkStatus, statusMessage) {\n                    console.log(networkStatus);\n                    console.log(statusMessage);\n                  });\n                }\n              }\n            };\n            searchManager.geocode(geocodeRequest);\n          });\n        }\n      }\n    }\n  }, {\n    key: 'setMapOptions',\n    value: function setMapOptions(mapOptions, mapReference) {\n      if (map[mapReference] && mapOptions) {\n        map[mapReference].setOptions(mapOptions);\n      }\n    }\n  }, {\n    key: 'setPolyline',\n    value: function setPolyline(polyline, mapReference) {\n      if (map[mapReference] && polyline) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var ref = map[mapReference].entities.get(i);\n          if (ref instanceof Microsoft.Maps.Polyline) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n        var polylineLocations = polyline.location ? polyline.location : null;\n        var polylineOption = polyline.option ? polyline.option : null;\n        var polylineLocationsAsMapLocations = [];\n        for (var polylineLocationIndex = 0; polylineLocationIndex < polylineLocations.length && polylineLocations[polylineLocationIndex][0] && polylineLocations[polylineLocationIndex][1]; polylineLocationIndex++) {\n          polylineLocationsAsMapLocations.push(new Microsoft.Maps.Location(polylineLocations[polylineLocationIndex][0], polylineLocations[polylineLocationIndex][1]));\n        }\n        if (polylineLocationsAsMapLocations.length !== 0) {\n          var polylineObject = new Microsoft.Maps.Polyline(polylineLocationsAsMapLocations, polylineOption);\n          map[mapReference].entities.push(polylineObject);\n        }\n      }\n    }\n  }, {\n    key: 'setDirections',\n    value: function setDirections(directions, mapReference) {\n      if (map[mapReference] && directions) {\n        var inputPanel = directions.inputPanel ? directions.inputPanel : null;\n        var renderOptions = directions.renderOptions ? directions.renderOptions : null;\n        var requestOptions = directions.requestOptions ? directions.requestOptions : null;\n        var wayPoints = directions.wayPoints ? directions.wayPoints : [];\n        var wayPointsAsDirection = [];\n        Microsoft.Maps.loadModule('Microsoft.Maps.Directions', function () {\n          var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map[mapReference]);\n          directionsManager.clearAll();\n          if (inputPanel) {\n            directionsManager.showInputPanel(inputPanel);\n          }\n          if (renderOptions) {\n            if (renderOptions.itineraryContainer) {\n              renderOptions.itineraryContainer = document.getElementById(renderOptions.itineraryContainer);\n            }\n            directionsManager.setRenderOptions(renderOptions);\n          }\n          if (requestOptions) {\n            var distanceUnit = requestOptions.distanceUnit ? Microsoft.Maps.Directions.DistanceUnit[requestOptions.distanceUnit] : null;\n            var routeMode = requestOptions.routeMode ? Microsoft.Maps.Directions.RouteMode[requestOptions.routeMode] : null;\n            var routeAvoidance = requestOptions.routeAvoidance ? Microsoft.Maps.Directions.RouteAvoidance[requestOptions.routeAvoidance] : null;\n            var routeOptimization = requestOptions.routeOptimization ? Microsoft.Maps.Directions.RouteOptimization[requestOptions.routeOptimization] : null;\n            var timeType = requestOptions.timeType ? Microsoft.Maps.Directions.TimeTypes[requestOptions.timeType] : null;\n            var vehicleSpec = requestOptions.vehicleSpec ? requestOptions.vehicleSpec : null;\n            var maxRoutes = requestOptions.maxRoutes ? requestOptions.maxRoutes : null;\n            var routeDraggable = requestOptions.routeDraggable ? requestOptions.routeDraggable : null;\n            var routeIndex = requestOptions.routeIndex ? requestOptions.routeIndex : null;\n            var time = requestOptions.time ? requestOptions.time : null;\n            directionsManager.setRequestOptions(Object.assign({}, distanceUnit && {\n              distanceUnit: distanceUnit\n            }, maxRoutes && {\n              maxRoutes: maxRoutes\n            }, routeMode && {\n              routeMode: routeMode\n            }, routeAvoidance && {\n              routeAvoidance: routeAvoidance\n            }, routeOptimization && {\n              routeOptimization: routeOptimization\n            }, timeType && {\n              timeType: timeType\n            }, vehicleSpec && {\n              vehicleSpec: vehicleSpec\n            }, routeDraggable && {\n              routeDraggable: routeDraggable\n            }, routeIndex && {\n              routeIndex: routeIndex\n            }, time && {\n              time: time\n            }));\n          }\n          for (var wayPointsIndex = 0; wayPointsIndex < wayPoints.length; wayPointsIndex++) {\n            var address = wayPoints[wayPointsIndex].address ? wayPoints[wayPointsIndex].address : null;\n            var location = wayPoints[wayPointsIndex].location && wayPoints[wayPointsIndex].location[0] && wayPoints[wayPointsIndex].location[1] ? new Microsoft.Maps.Location(wayPoints[wayPointsIndex].location[0], wayPoints[wayPointsIndex].location[1]) : null;\n            var isViaPoint = wayPoints[wayPointsIndex].isViaPoint ? wayPoints[wayPointsIndex].isViaPoint : null;\n            wayPointsAsDirection.push(new Microsoft.Maps.Directions.Waypoint({\n              address: address,\n              location: location,\n              isViaPoint: isViaPoint\n            }));\n          }\n          if (wayPointsAsDirection.length !== 0) {\n            for (var wayPointsAsDirectionIndex = 0; wayPointsAsDirectionIndex < wayPointsAsDirection.length; wayPointsAsDirectionIndex++) {\n              directionsManager.addWaypoint(wayPointsAsDirection[wayPointsAsDirectionIndex]);\n            }\n            directionsManager.calculateDirections();\n          }\n        });\n      }\n    }\n  }, {\n    key: 'setMapHandlers',\n    value: function setMapHandlers(mapHandlers, mapReference) {\n      if (map[mapReference] && mapHandlers) {\n        for (var mapHandlerIndex = 0; mapHandlerIndex < mapHandlers.length; mapHandlerIndex++) {\n          var mapHandler = mapHandlers[mapHandlerIndex];\n          if (mapHandler.addHandler) {\n            Microsoft.Maps.Events.addHandler(map[mapReference], mapHandler.addHandler, function (callback, e) {\n              var callbackData = {\n                event: e,\n                map: map[mapReference]\n              };\n              this.MakeCallback(callback, callbackData);\n            }.bind(this, mapHandler.callback));\n          } else {\n            Microsoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n              var callbackData = {\n                event: e,\n                map: map[mapReference]\n              };\n              this.MakeCallback(callback, callbackData);\n            }.bind(this, mapHandler.callback));\n          }\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        id: this.props.id,\n        className: (0, _classnames2.default)('react-bingmaps', this.props.className)\n      });\n    }\n  }]);\n  return ReactBingmaps;\n}(_react.Component);\nexports.default = ReactBingmaps;\nReactBingmaps.propTypes = {\n  bingmapKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  center: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  mapTypeId: _propTypes2.default.string,\n  navigationBarMode: _propTypes2.default.string,\n  supportedMapTypes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  heading: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  zoom: _propTypes2.default.number,\n  pushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    option: _propTypes2.default.object,\n    addHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  disableStreetside: _propTypes2.default.bool,\n  infoboxes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    option: _propTypes2.default.object,\n    addHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  infoboxesWithPushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    addHandler: _propTypes2.default.string,\n    infoboxOption: _propTypes2.default.object,\n    pushPinOption: _propTypes2.default.object,\n    infoboxAddHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    }),\n    pushPinAddHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  getLocation: _propTypes2.default.object,\n  regularPolygons: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    center: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    radius: _propTypes2.default.number,\n    points: _propTypes2.default.number,\n    option: _propTypes2.default.object\n  })),\n  boundary: _propTypes2.default.shape({\n    location: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n    option: _propTypes2.default.object,\n    polygonStyle: _propTypes2.default.object,\n    search: _propTypes2.default.string\n  }),\n  mapOptions: _propTypes2.default.object,\n  polyline: _propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.number)),\n    option: _propTypes2.default.object\n  }),\n  directions: _propTypes2.default.object,\n  mapHandlers: _propTypes2.default.arrayOf(_propTypes2.default.object)\n};\nReactBingmaps.defaultProps = {\n  bingmapKey: undefined,\n  center: undefined,\n  mapTypeId: undefined,\n  navigationBarMode: undefined,\n  supportedMapTypes: undefined,\n  heading: 0,\n  pushPins: undefined,\n  disableStreetside: true,\n  infoboxes: undefined,\n  infoboxesWithPushPins: undefined,\n  zoom: undefined,\n  getLocation: undefined,\n  regularPolygons: undefined,\n  boundary: undefined,\n  mapOptions: undefined,\n  polyline: undefined,\n  directions: undefined,\n  mapHandlers: undefined\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_classnames","_classnames2","_propTypes","_propTypes2","_server","_server2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","map","Microsoft","infobox","scriptURL","pendingProps","ReactBingmaps","_Component","_this","getPrototypeOf","document","querySelector","loadScript","window","bingmapsCallback","afterDependencyLoad","bind","componentDidMount","undefined","push","reactBingmaps","_this2","exception","console","log","componentWillUnmount","mapReference","id","url","script","createElement","type","async","defer","src","getElementsByTagName","appendChild","componentWillReceiveProps","nextProps","center","join","setMapCenter","zoom","setMapZoom","mapTypeId","setMapTypeId","heading","navigationBarMode","setMapNavigationBarMode","supportedMapTypes","setMapSupportedMapTypes","disableStreetside","setDisableStreetside","pushPins","setPushPins","infoboxes","setInfoboxes","infoboxesWithPushPins","setInfoboxesWithPushPins","regularPolygons","createRegularPolygons","boundary","setBoundary","mapOptions","setMapOptions","polyline","setPolyline","directions","setDirections","bingmapKey","getLocation","mapHandlers","Maps","Map","credentials","setGetLocation","setMapHandlers","setView","Location","isBirdEyeAvailable","location","getIsBirdseyeAvailable","Heading","onResponse","MapTypeId","birdseye","entities","getLength","pushpin","get","Pushpin","removeAt","pushPinIndex","option","anchor","Point","_pushpin","addHandler","Events","callback","data","MakeCallback","callbackData","infoboxCreateType","setMap","infoboxIndex","htmlContent","renderToStaticMarkup","Infobox","infoboxWithPushPinIndex","infoboxOption","pushPinOption","infoboxAddHandler","_pushpin2","pushPinAddHandler","setInfoboxesWithPushPinsHandler","e","getX","getY","point","tryPixelToLocation","setOptions","visible","regularPolygon","Polygon","regularPolygonIndex","radius","points","loadModule","locations","SpatialMath","getRegularPolygon","DistanceUnits","Miles","polygon","boundaryLocation","geoDataRequestOptions","polygonStyle","search","SpatialDataService","GeoDataAPIManager","getBoundary","results","Polygons","errCallback","networkStatus","statusMessage","searchManager","Search","SearchManager","geocodeRequest","where","geocodeResult","bounds","bestView","geocode","ref","Polyline","polylineLocations","polylineOption","polylineLocationsAsMapLocations","polylineLocationIndex","polylineObject","inputPanel","renderOptions","requestOptions","wayPoints","wayPointsAsDirection","directionsManager","Directions","DirectionsManager","clearAll","showInputPanel","itineraryContainer","getElementById","setRenderOptions","distanceUnit","DistanceUnit","routeMode","RouteMode","routeAvoidance","RouteAvoidance","routeOptimization","RouteOptimization","timeType","TimeTypes","vehicleSpec","maxRoutes","routeDraggable","routeIndex","time","setRequestOptions","assign","wayPointsIndex","address","isViaPoint","Waypoint","wayPointsAsDirectionIndex","addWaypoint","calculateDirections","mapHandlerIndex","mapHandler","event","render","className","Component","propTypes","oneOfType","string","number","arrayOf","shape","object","func","bool","defaultProps"],"sources":["/home/madhu/Downloads/realestate-mernstack-main/realestate-mernstack-main/realestate-mernstack-main/client/node_modules/react-bingmaps/lib/components/ReactBingmaps/ReactBingmaps.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _server = require('react-dom/server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nrequire('./ReactBingmaps.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar map = {},\n    Microsoft,\n    infobox = {},\n    scriptURL = \"https://www.bing.com/api/maps/mapcontrol?callback=bingmapsCallback\",\n    pendingProps = [];\n\nvar ReactBingmaps = function (_Component) {\n\t_inherits(ReactBingmaps, _Component);\n\n\tfunction ReactBingmaps(props) {\n\t\t_classCallCheck(this, ReactBingmaps);\n\n\t\tvar _this = _possibleConstructorReturn(this, (ReactBingmaps.__proto__ || Object.getPrototypeOf(ReactBingmaps)).call(this, props));\n\n\t\tif (document.querySelector('script[src=\"' + scriptURL + '\"]') === null) {\n\t\t\t_this.loadScript(scriptURL);\n\t\t\twindow.bingmapsCallback = function () {\n\t\t\t\tMicrosoft = window.Microsoft;\n\t\t\t\tthis.afterDependencyLoad(pendingProps);\n\t\t\t}.bind(_this);\n\t\t}\n\t\treturn _this;\n\t}\n\n\t_createClass(ReactBingmaps, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tif (Microsoft === null || Microsoft === undefined) {\n\t\t\t\tpendingProps.push(this.props);\n\t\t\t} else {\n\t\t\t\tthis.reactBingmaps(this.props, Microsoft);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'afterDependencyLoad',\n\t\tvalue: function afterDependencyLoad(pendingProps) {\n\t\t\tvar _this2 = this;\n\n\t\t\ttry {\n\t\t\t\tpendingProps.map(function (props) {\n\t\t\t\t\treturn _this2.reactBingmaps(props, Microsoft);\n\t\t\t\t});\n\t\t\t} catch (exception) {\n\t\t\t\tconsole.log(\"Error loading Microsoft bingmaps\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\ttry {\n\t\t\t\tvar mapReference = this.props.id ? '#' + this.props.id : '.react-bingmaps';\n\t\t\t\tif (map[mapReference])\n\t\t\t\t\t//map[mapReference].dispose();\n\n\t\t\t\t\tmap[mapReference] = undefined;\n\t\t\t\tinfobox = {};\n\t\t\t\tpendingProps = [];\n\t\t\t} catch (exception) {\n\t\t\t\tconsole.log(exception);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'loadScript',\n\t\tvalue: function loadScript(url) {\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.type = \"text/javascript\";\n\t\t\tscript.async = true;\n\t\t\tscript.defer = true;\n\t\t\tscript.src = url;\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar mapReference = nextProps.id ? '#' + nextProps.id : '.react-bingmaps';\n\t\t\tif (this.props.center.join() !== nextProps.center.join()) {\n\t\t\t\tthis.setMapCenter(nextProps.center, mapReference);\n\t\t\t}\n\t\t\tif (this.props.zoom !== nextProps.zoom) {\n\t\t\t\tthis.setMapZoom(nextProps.zoom, mapReference);\n\t\t\t}\n\t\t\tif (this.props.mapTypeId !== nextProps.mapTypeId) {\n\t\t\t\tthis.setMapTypeId(nextProps.mapTypeId, nextProps.center, nextProps.heading, mapReference);\n\t\t\t}\n\t\t\tif (this.props.navigationBarMode !== nextProps.navigationBarMode) {\n\t\t\t\tthis.setMapNavigationBarMode(nextProps.navigationBarMode, mapReference);\n\t\t\t}\n\t\t\tif (this.props.supportedMapTypes !== nextProps.supportedMapTypes) {\n\t\t\t\tthis.setMapSupportedMapTypes(nextProps.supportedMapTypes, mapReference);\n\t\t\t}\n\t\t\tif (this.props.disableStreetside !== nextProps.disableStreetside) {\n\t\t\t\tthis.setDisableStreetside(nextProps.disableStreetside, mapReference);\n\t\t\t}\n\t\t\tif (this.props.pushPins !== nextProps.pushPins) {\n\t\t\t\tthis.setPushPins(nextProps.pushPins, mapReference);\n\t\t\t}\n\t\t\tif (this.props.infoboxes !== nextProps.infoboxes) {\n\t\t\t\tthis.setInfoboxes(nextProps.infoboxes, \"infoboxes\", mapReference);\n\t\t\t}\n\t\t\tif (this.props.infoboxesWithPushPins !== nextProps.infoboxesWithPushPins) {\n\t\t\t\tthis.setInfoboxesWithPushPins(nextProps.infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n\t\t\t}\n\t\t\tif (this.props.regularPolygons !== nextProps.regularPolygons) {\n\t\t\t\tthis.createRegularPolygons(nextProps.regularPolygons, mapReference);\n\t\t\t}\n\t\t\tif (this.props.boundary !== nextProps.boundary) {\n\t\t\t\tthis.setBoundary(nextProps.boundary, mapReference);\n\t\t\t}\n\t\t\tif (this.props.mapOptions !== nextProps.mapOptions) {\n\t\t\t\tthis.setMapOptions(nextProps.mapOptions, mapReference);\n\t\t\t}\n\t\t\tif (this.props.polyline !== nextProps.polyline) {\n\t\t\t\tthis.setPolyline(nextProps.polyline, mapReference);\n\t\t\t}\n\t\t\tif (this.props.directions !== nextProps.directions) {\n\t\t\t\tthis.setDirections(nextProps.directions, mapReference);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reactBingmaps',\n\t\tvalue: function reactBingmaps(props, Microsoft) {\n\t\t\tvar bingmapKey = props.bingmapKey,\n\t\t\t    center = props.center,\n\t\t\t    mapTypeId = props.mapTypeId,\n\t\t\t    zoom = props.zoom,\n\t\t\t    navigationBarMode = props.navigationBarMode,\n\t\t\t    supportedMapTypes = props.supportedMapTypes,\n\t\t\t    heading = props.heading,\n\t\t\t    pushPins = props.pushPins,\n\t\t\t    disableStreetside = props.disableStreetside,\n\t\t\t    infoboxes = props.infoboxes,\n\t\t\t    infoboxesWithPushPins = props.infoboxesWithPushPins,\n\t\t\t    getLocation = props.getLocation,\n\t\t\t    regularPolygons = props.regularPolygons,\n\t\t\t    boundary = props.boundary,\n\t\t\t    mapOptions = props.mapOptions,\n\t\t\t    polyline = props.polyline,\n\t\t\t    directions = props.directions,\n\t\t\t    mapHandlers = props.mapHandlers;\n\n\t\t\tif (bingmapKey && Microsoft) {\n\t\t\t\tvar mapReference = props.id ? '#' + props.id : '.react-bingmaps';\n\t\t\t\tif (!map[mapReference]) {\n\t\t\t\t\tmap[mapReference] = new Microsoft.Maps.Map(mapReference, {\n\t\t\t\t\t\tcredentials: bingmapKey\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setMapCenter(center, mapReference);\n\t\t\t\tthis.setMapTypeId(mapTypeId, center, heading, mapReference);\n\t\t\t\tthis.setMapZoom(zoom, mapReference);\n\t\t\t\tthis.setMapNavigationBarMode(navigationBarMode, mapReference);\n\t\t\t\tthis.setMapSupportedMapTypes(supportedMapTypes, mapReference);\n\t\t\t\tthis.setDisableStreetside(disableStreetside, mapReference);\n\t\t\t\tthis.setPushPins(pushPins, mapReference);\n\t\t\t\tthis.setInfoboxes(infoboxes, \"infoboxes\", mapReference);\n\t\t\t\tthis.setInfoboxesWithPushPins(infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n\t\t\t\tthis.setGetLocation(getLocation, mapReference);\n\t\t\t\tthis.createRegularPolygons(regularPolygons, mapReference);\n\t\t\t\tthis.setBoundary(boundary, mapReference);\n\t\t\t\tthis.setMapOptions(mapOptions, mapReference);\n\t\t\t\tthis.setPolyline(polyline, mapReference);\n\t\t\t\tthis.setDirections(directions, mapReference);\n\t\t\t\tthis.setMapHandlers(mapHandlers, mapReference);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapCenter',\n\t\tvalue: function setMapCenter(center, mapReference) {\n\t\t\tif (map[mapReference] && center && center[0] && center[1]) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tcenter: new Microsoft.Maps.Location(center[0], center[1])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapTypeId',\n\t\tvalue: function setMapTypeId(mapTypeId, center, heading, mapReference) {\n\t\t\tif (map[mapReference] && mapTypeId) {\n\t\t\t\tvar isBirdEyeAvailable = false;\n\t\t\t\tif (mapTypeId === \"birdseye\" && center && center[0] && center[1]) {\n\t\t\t\t\tvar location = new Microsoft.Maps.Location(center[0], center[1]);\n\t\t\t\t\tMicrosoft.Maps.getIsBirdseyeAvailable(location, Microsoft.Maps.Heading[heading], function (onResponse) {\n\t\t\t\t\t\tisBirdEyeAvailable = onResponse;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (mapTypeId) {\n\t\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\t\tmapTypeId: isBirdEyeAvailable ? Microsoft.Maps.MapTypeId.birdseye : Microsoft.Maps.MapTypeId[mapTypeId]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapZoom',\n\t\tvalue: function setMapZoom(zoom, mapReference) {\n\t\t\tif (map[mapReference] && zoom) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tzoom: zoom\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapNavigationBarMode',\n\t\tvalue: function setMapNavigationBarMode(navigationBarMode, mapReference) {\n\t\t\tif (map[mapReference] && navigationBarMode) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tnavigationBarMode: navigationBarMode\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapSupportedMapTypes',\n\t\tvalue: function setMapSupportedMapTypes(supportedMapTypes, mapReference) {\n\t\t\tif (map[mapReference] && supportedMapTypes) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tsupportedMapTypes: supportedMapTypes.map(function (id) {\n\t\t\t\t\t\treturn Microsoft.Maps.MapTypeId[id];\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setDisableStreetside',\n\t\tvalue: function setDisableStreetside(disableStreetside, mapReference) {\n\t\t\tif (map[mapReference] && disableStreetside) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tdisableStreetside: disableStreetside\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setPushPins',\n\t\tvalue: function setPushPins(pushPins, mapReference) {\n\t\t\tif (map[mapReference] && pushPins) {\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar pushpin = map[mapReference].entities.get(i);\n\t\t\t\t\tif (pushpin instanceof Microsoft.Maps.Pushpin) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var pushPinIndex = 0; pushPinIndex < pushPins.length; pushPinIndex++) {\n\t\t\t\t\tif (pushPins[pushPinIndex].location && pushPins[pushPinIndex].location[0] && pushPins[pushPinIndex].location[1]) {\n\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(pushPins[pushPinIndex].location[0], pushPins[pushPinIndex].location[1]);\n\t\t\t\t\t\tvar option = pushPins[pushPinIndex].option ? pushPins[pushPinIndex].option : null;\n\t\t\t\t\t\tif (option && option.anchor && option.anchor[0] && option.anchor[1]) {\n\t\t\t\t\t\t\toption.anchor = new Microsoft.Maps.Point(option.anchor[0], option.anchor[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar _pushpin = new Microsoft.Maps.Pushpin(location, option);\n\t\t\t\t\t\tmap[mapReference].entities.push(_pushpin);\n\t\t\t\t\t\tif (pushPins[pushPinIndex].addHandler) {\n\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(_pushpin, pushPins[pushPinIndex].addHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t}.bind(this, pushPins[pushPinIndex].addHandler.callback, pushPins[pushPinIndex].addHandler.callbackData));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxes',\n\t\tvalue: function setInfoboxes(infoboxes, infoboxCreateType, mapReference) {\n\t\t\tif (map[mapReference] && infoboxes) {\n\t\t\t\tfor (var i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n\t\t\t\t\tinfobox[infoboxCreateType][i].setMap(null);\n\t\t\t\t}\n\t\t\t\tinfobox[infoboxCreateType] = [];\n\t\t\t\tif (infoboxes) {\n\t\t\t\t\tfor (var infoboxIndex = 0; infoboxIndex < infoboxes.length; infoboxIndex++) {\n\t\t\t\t\t\tif (infoboxes[infoboxIndex].location && infoboxes[infoboxIndex].location[0] && infoboxes[infoboxIndex].location[1]) {\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(infoboxes[infoboxIndex].location[0], infoboxes[infoboxIndex].location[1]);\n\t\t\t\t\t\t\tvar option = infoboxes[infoboxIndex] ? infoboxes[infoboxIndex].option : null;\n\t\t\t\t\t\t\tif (option.htmlContent) {\n\t\t\t\t\t\t\t\toption.htmlContent = _server2.default.renderToStaticMarkup(option.htmlContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinfobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, option));\n\t\t\t\t\t\t\tinfobox[infoboxCreateType][infoboxIndex].setMap(map[mapReference]);\n\t\t\t\t\t\t\tif (infoboxes[infoboxIndex].addHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxIndex], infoboxes[infoboxIndex].addHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxes[infoboxIndex].addHandler.callback, infoboxes[infoboxIndex].addHandler.callbackData));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxesWithPushPins',\n\t\tvalue: function setInfoboxesWithPushPins(infoboxesWithPushPins, infoboxCreateType, mapReference) {\n\t\t\tif (map[mapReference] && infoboxesWithPushPins) {\n\t\t\t\t//Remove existing Infoboxes\n\t\t\t\tvar i;\n\t\t\t\tfor (i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n\t\t\t\t\tinfobox[infoboxCreateType][i].setMap(null);\n\t\t\t\t}\n\n\t\t\t\t//Remove existing Pushpins\n\t\t\t\tfor (i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar pushpin = map[mapReference].entities.get(i);\n\t\t\t\t\tif (pushpin instanceof Microsoft.Maps.Pushpin) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinfobox[infoboxCreateType] = [];\n\n\t\t\t\t//Add Infoboxes with Pushpins\n\t\t\t\tif (infoboxesWithPushPins) {\n\t\t\t\t\tfor (var infoboxWithPushPinIndex = 0; infoboxWithPushPinIndex < infoboxesWithPushPins.length; infoboxWithPushPinIndex++) {\n\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].location) {\n\t\t\t\t\t\t\t//Set Location\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(infoboxesWithPushPins[infoboxWithPushPinIndex].location[0], infoboxesWithPushPins[infoboxWithPushPinIndex].location[1]);\n\n\t\t\t\t\t\t\t//Set Infobox Option\n\t\t\t\t\t\t\tvar infoboxOption = infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption : null;\n\n\t\t\t\t\t\t\t//ConvertToHtml if Obj\n\t\t\t\t\t\t\tif (infoboxOption.htmlContent) {\n\t\t\t\t\t\t\t\tinfoboxOption.htmlContent = _server2.default.renderToStaticMarkup(infoboxOption.htmlContent);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//If Handler added, initially hide Infobox\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n\t\t\t\t\t\t\t\tinfoboxOption[\"visible\"] = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Pushpin Option\n\t\t\t\t\t\t\tvar pushPinOption = infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption : null;\n\n\t\t\t\t\t\t\t//Initilize if anchor for Pushpin\n\t\t\t\t\t\t\tif (pushPinOption.anchor && pushPinOption.anchor[0] && pushPinOption.anchor[1]) {\n\t\t\t\t\t\t\t\tpushPinOption.anchor = new Microsoft.Maps.Point(pushPinOption.anchor[0], pushPinOption.anchor[1]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Infobox\n\t\t\t\t\t\t\tinfobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, infoboxOption));\n\t\t\t\t\t\t\tinfobox[infoboxCreateType][infoboxWithPushPinIndex].setMap(map[mapReference]);\n\n\t\t\t\t\t\t\t//Set Infobox Callback if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callbackData));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Pushpin\t\t\t\t\n\t\t\t\t\t\t\tvar _pushpin2 = new Microsoft.Maps.Pushpin(location, pushPinOption);\n\t\t\t\t\t\t\tmap[mapReference].entities.push(_pushpin2);\n\n\t\t\t\t\t\t\t//Set Pushpin Callback if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(_pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callbackData));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set InfoboxesWithPushPins handler if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n\t\t\t\t\t\t\t\tthis.setInfoboxesWithPushPinsHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], _pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setGetLocation',\n\t\tvalue: function setGetLocation(getLocation, mapReference) {\n\t\t\tif (map[mapReference] && getLocation) {\n\t\t\t\tif (getLocation.addHandler) {\n\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], getLocation.addHandler, function (callback, e) {\n\t\t\t\t\t\tif (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n\t\t\t\t\t\t\tvar point = new Microsoft.Maps.Point(e.getX(), e.getY());\n\t\t\t\t\t\t\tvar location = e.target.tryPixelToLocation(point);\n\t\t\t\t\t\t\tthis.MakeCallback(callback, location);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this, getLocation.callback));\n\t\t\t\t} else {\n\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n\t\t\t\t\t\tif (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n\t\t\t\t\t\t\tvar point = new Microsoft.Maps.Point(e.getX(), e.getY());\n\t\t\t\t\t\t\tvar location = e.target.tryPixelToLocation(point);\n\t\t\t\t\t\t\tthis.MakeCallback(callback, location);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this, getLocation.callback));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxesWithPushPinsHandler',\n\t\tvalue: function setInfoboxesWithPushPinsHandler(infobox, pushpin, addHandler, mapReference) {\n\t\t\tif (addHandler === \"mouseover\") {\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n\t\t\t\t\tinfobox.setOptions({ visible: true });\n\t\t\t\t});\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, \"mouseout\", function () {\n\t\t\t\t\tinfobox.setOptions({ visible: false });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n\t\t\t\t\tinfobox.setOptions({ visible: true });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'MakeCallback',\n\t\tvalue: function MakeCallback(callback, data, mapReference) {\n\t\t\tdata ? callback(data) : callback();\n\t\t}\n\t}, {\n\t\tkey: 'createRegularPolygons',\n\t\tvalue: function createRegularPolygons(regularPolygons, mapReference) {\n\t\t\tif (map[mapReference] && regularPolygons) {\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar regularPolygon = map[mapReference].entities.get(i);\n\t\t\t\t\tif (regularPolygon instanceof Microsoft.Maps.Polygon) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var regularPolygonIndex = 0; regularPolygonIndex < regularPolygons.length; regularPolygonIndex++) {\n\t\t\t\t\tif (regularPolygons[regularPolygonIndex].center && regularPolygons[regularPolygonIndex].center[0] && regularPolygons[regularPolygonIndex].center[1]) {\n\t\t\t\t\t\t(function () {\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(regularPolygons[regularPolygonIndex].center[0], regularPolygons[regularPolygonIndex].center[1]);\n\t\t\t\t\t\t\tvar radius = regularPolygons[regularPolygonIndex].radius ? regularPolygons[regularPolygonIndex].radius : 0;\n\t\t\t\t\t\t\tvar points = regularPolygons[regularPolygonIndex].points ? regularPolygons[regularPolygonIndex].points : 0;\n\t\t\t\t\t\t\tvar option = regularPolygons[regularPolygonIndex].option ? regularPolygons[regularPolygonIndex].option : {};\n\n\t\t\t\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function () {\n\t\t\t\t\t\t\t\tvar locations = Microsoft.Maps.SpatialMath.getRegularPolygon(location, radius, points, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);\n\t\t\t\t\t\t\t\tvar polygon = new Microsoft.Maps.Polygon(locations, option);\n\t\t\t\t\t\t\t\tmap[mapReference].entities.push(polygon);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setBoundary',\n\t\tvalue: function setBoundary(boundary, mapReference) {\n\t\t\tif (map[mapReference] && boundary) {\n\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar regularPolygon = map[mapReference].entities.get(i);\n\t\t\t\t\tif (regularPolygon instanceof Microsoft.Maps.Polygon) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// var boundaryLocation;\n\t\t\t\t// if(boundary.option && \n\t\t\t\t// \tboundary.option.entityType && \n\t\t\t\t// \t\t!(boundary.option.entityType.includes(\"Postcode\"))){\n\t\t\t\t// \tboundaryLocation = new Microsoft.Maps.Location(boundary.location[0], boundary.location[1]);\n\t\t\t\t// }\n\t\t\t\t// else{\n\t\t\t\t// \tboundaryLocation = boundary.location\n\t\t\t\t// }\n\n\t\t\t\tvar boundaryLocation = boundary.location ? boundary.location : null;\n\n\t\t\t\tvar geoDataRequestOptions = boundary.option ? boundary.option : {};\n\t\t\t\tvar polygonStyle = boundary.polygonStyle ? boundary.polygonStyle : null;\n\t\t\t\tvar search = boundary.search ? boundary.search : null;\n\t\t\t\tif (!search && boundaryLocation) {\n\t\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.SpatialDataService', function () {\n\t\t\t\t\t\tMicrosoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(boundaryLocation, geoDataRequestOptions, map[mapReference], function (data) {\n\t\t\t\t\t\t\tif (data.results && data.results.length > 0) {\n\t\t\t\t\t\t\t\tmap[mapReference].entities.push(data.results[0].Polygons);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, polygonStyle, function errCallback(networkStatus, statusMessage) {\n\t\t\t\t\t\t\tconsole.log(networkStatus);\n\t\t\t\t\t\t\tconsole.log(statusMessage);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tMicrosoft.Maps.loadModule(['Microsoft.Maps.SpatialDataService', 'Microsoft.Maps.Search'], function () {\n\t\t\t\t\t\tvar searchManager = new Microsoft.Maps.Search.SearchManager(map[mapReference]);\n\t\t\t\t\t\tvar geocodeRequest = {\n\t\t\t\t\t\t\twhere: search,\n\t\t\t\t\t\t\tcallback: function callback(geocodeResult) {\n\t\t\t\t\t\t\t\tif (geocodeResult && geocodeResult.results && geocodeResult.results.length > 0) {\n\t\t\t\t\t\t\t\t\tmap[mapReference].setView({ bounds: geocodeResult.results[0].bestView });\n\t\t\t\t\t\t\t\t\tMicrosoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(geocodeResult.results[0].location, geoDataRequestOptions, map[mapReference], function (data) {\n\t\t\t\t\t\t\t\t\t\tif (data.results && data.results.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tmap[mapReference].entities.push(data.results[0].Polygons);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, polygonStyle, function errCallback(networkStatus, statusMessage) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(networkStatus);\n\t\t\t\t\t\t\t\t\t\tconsole.log(statusMessage);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsearchManager.geocode(geocodeRequest);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapOptions',\n\t\tvalue: function setMapOptions(mapOptions, mapReference) {\n\t\t\tif (map[mapReference] && mapOptions) {\n\t\t\t\tmap[mapReference].setOptions(mapOptions);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setPolyline',\n\t\tvalue: function setPolyline(polyline, mapReference) {\n\t\t\tif (map[mapReference] && polyline) {\n\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar ref = map[mapReference].entities.get(i);\n\t\t\t\t\tif (ref instanceof Microsoft.Maps.Polyline) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar polylineLocations = polyline.location ? polyline.location : null;\n\t\t\t\tvar polylineOption = polyline.option ? polyline.option : null;\n\n\t\t\t\tvar polylineLocationsAsMapLocations = [];\n\t\t\t\tfor (var polylineLocationIndex = 0; polylineLocationIndex < polylineLocations.length && polylineLocations[polylineLocationIndex][0] && polylineLocations[polylineLocationIndex][1]; polylineLocationIndex++) {\n\t\t\t\t\tpolylineLocationsAsMapLocations.push(new Microsoft.Maps.Location(polylineLocations[polylineLocationIndex][0], polylineLocations[polylineLocationIndex][1]));\n\t\t\t\t}\n\n\t\t\t\tif (polylineLocationsAsMapLocations.length !== 0) {\n\t\t\t\t\tvar polylineObject = new Microsoft.Maps.Polyline(polylineLocationsAsMapLocations, polylineOption);\n\t\t\t\t\tmap[mapReference].entities.push(polylineObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setDirections',\n\t\tvalue: function setDirections(directions, mapReference) {\n\t\t\tif (map[mapReference] && directions) {\n\t\t\t\tvar inputPanel = directions.inputPanel ? directions.inputPanel : null;\n\t\t\t\tvar renderOptions = directions.renderOptions ? directions.renderOptions : null;\n\t\t\t\tvar requestOptions = directions.requestOptions ? directions.requestOptions : null;\n\t\t\t\tvar wayPoints = directions.wayPoints ? directions.wayPoints : [];\n\t\t\t\tvar wayPointsAsDirection = [];\n\n\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.Directions', function () {\n\t\t\t\t\tvar directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map[mapReference]);\n\t\t\t\t\tdirectionsManager.clearAll();\n\t\t\t\t\tif (inputPanel) {\n\t\t\t\t\t\tdirectionsManager.showInputPanel(inputPanel);\n\t\t\t\t\t}\n\t\t\t\t\tif (renderOptions) {\n\t\t\t\t\t\tif (renderOptions.itineraryContainer) {\n\t\t\t\t\t\t\trenderOptions.itineraryContainer = document.getElementById(renderOptions.itineraryContainer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirectionsManager.setRenderOptions(renderOptions);\n\t\t\t\t\t}\n\t\t\t\t\tif (requestOptions) {\n\t\t\t\t\t\tvar distanceUnit = requestOptions.distanceUnit ? Microsoft.Maps.Directions.DistanceUnit[requestOptions.distanceUnit] : null;\n\t\t\t\t\t\tvar routeMode = requestOptions.routeMode ? Microsoft.Maps.Directions.RouteMode[requestOptions.routeMode] : null;\n\t\t\t\t\t\tvar routeAvoidance = requestOptions.routeAvoidance ? Microsoft.Maps.Directions.RouteAvoidance[requestOptions.routeAvoidance] : null;\n\t\t\t\t\t\tvar routeOptimization = requestOptions.routeOptimization ? Microsoft.Maps.Directions.RouteOptimization[requestOptions.routeOptimization] : null;\n\t\t\t\t\t\tvar timeType = requestOptions.timeType ? Microsoft.Maps.Directions.TimeTypes[requestOptions.timeType] : null;\n\n\t\t\t\t\t\tvar vehicleSpec = requestOptions.vehicleSpec ? requestOptions.vehicleSpec : null;\n\t\t\t\t\t\tvar maxRoutes = requestOptions.maxRoutes ? requestOptions.maxRoutes : null;\n\t\t\t\t\t\tvar routeDraggable = requestOptions.routeDraggable ? requestOptions.routeDraggable : null;\n\t\t\t\t\t\tvar routeIndex = requestOptions.routeIndex ? requestOptions.routeIndex : null;\n\t\t\t\t\t\tvar time = requestOptions.time ? requestOptions.time : null;\n\n\t\t\t\t\t\tdirectionsManager.setRequestOptions(Object.assign({}, distanceUnit && { distanceUnit: distanceUnit }, maxRoutes && { maxRoutes: maxRoutes }, routeMode && { routeMode: routeMode }, routeAvoidance && { routeAvoidance: routeAvoidance }, routeOptimization && { routeOptimization: routeOptimization }, timeType && { timeType: timeType }, vehicleSpec && { vehicleSpec: vehicleSpec }, routeDraggable && { routeDraggable: routeDraggable }, routeIndex && { routeIndex: routeIndex }, time && { time: time }));\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var wayPointsIndex = 0; wayPointsIndex < wayPoints.length; wayPointsIndex++) {\n\t\t\t\t\t\tvar address = wayPoints[wayPointsIndex].address ? wayPoints[wayPointsIndex].address : null;\n\t\t\t\t\t\tvar location = wayPoints[wayPointsIndex].location && wayPoints[wayPointsIndex].location[0] && wayPoints[wayPointsIndex].location[1] ? new Microsoft.Maps.Location(wayPoints[wayPointsIndex].location[0], wayPoints[wayPointsIndex].location[1]) : null;\n\t\t\t\t\t\tvar isViaPoint = wayPoints[wayPointsIndex].isViaPoint ? wayPoints[wayPointsIndex].isViaPoint : null;\n\n\t\t\t\t\t\twayPointsAsDirection.push(new Microsoft.Maps.Directions.Waypoint({\n\t\t\t\t\t\t\taddress: address,\n\t\t\t\t\t\t\tlocation: location,\n\t\t\t\t\t\t\tisViaPoint: isViaPoint\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tif (wayPointsAsDirection.length !== 0) {\n\t\t\t\t\t\tfor (var wayPointsAsDirectionIndex = 0; wayPointsAsDirectionIndex < wayPointsAsDirection.length; wayPointsAsDirectionIndex++) {\n\t\t\t\t\t\t\tdirectionsManager.addWaypoint(wayPointsAsDirection[wayPointsAsDirectionIndex]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirectionsManager.calculateDirections();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapHandlers',\n\t\tvalue: function setMapHandlers(mapHandlers, mapReference) {\n\t\t\tif (map[mapReference] && mapHandlers) {\n\t\t\t\tfor (var mapHandlerIndex = 0; mapHandlerIndex < mapHandlers.length; mapHandlerIndex++) {\n\t\t\t\t\tvar mapHandler = mapHandlers[mapHandlerIndex];\n\t\t\t\t\tif (mapHandler.addHandler) {\n\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], mapHandler.addHandler, function (callback, e) {\n\t\t\t\t\t\t\tvar callbackData = {\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\tmap: map[mapReference]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.MakeCallback(callback, callbackData);\n\t\t\t\t\t\t}.bind(this, mapHandler.callback));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n\t\t\t\t\t\t\tvar callbackData = {\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\tmap: map[mapReference]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.MakeCallback(callback, callbackData);\n\t\t\t\t\t\t}.bind(this, mapHandler.callback));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement('div', { id: this.props.id, className: (0, _classnames2.default)('react-bingmaps', this.props.className) });\n\t\t}\n\t}]);\n\n\treturn ReactBingmaps;\n}(_react.Component);\n\nexports.default = ReactBingmaps;\n\n\nReactBingmaps.propTypes = {\n\tbingmapKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\tcenter: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\tmapTypeId: _propTypes2.default.string,\n\tnavigationBarMode: _propTypes2.default.string,\n\tsupportedMapTypes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\theading: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\tzoom: _propTypes2.default.number,\n\tpushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\toption: _propTypes2.default.object,\n\t\taddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tdisableStreetside: _propTypes2.default.bool,\n\tinfoboxes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\toption: _propTypes2.default.object,\n\t\taddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tinfoboxesWithPushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\taddHandler: _propTypes2.default.string,\n\t\tinfoboxOption: _propTypes2.default.object,\n\t\tpushPinOption: _propTypes2.default.object,\n\t\tinfoboxAddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t}),\n\t\tpushPinAddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tgetLocation: _propTypes2.default.object,\n\tregularPolygons: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tcenter: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\tradius: _propTypes2.default.number,\n\t\tpoints: _propTypes2.default.number,\n\t\toption: _propTypes2.default.object\n\t})),\n\tboundary: _propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n\t\toption: _propTypes2.default.object,\n\t\tpolygonStyle: _propTypes2.default.object,\n\t\tsearch: _propTypes2.default.string\n\t}),\n\tmapOptions: _propTypes2.default.object,\n\tpolyline: _propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.number)),\n\t\toption: _propTypes2.default.object\n\t}),\n\tdirections: _propTypes2.default.object,\n\tmapHandlers: _propTypes2.default.arrayOf(_propTypes2.default.object)\n};\nReactBingmaps.defaultProps = {\n\tbingmapKey: undefined,\n\tcenter: undefined,\n\tmapTypeId: undefined,\n\tnavigationBarMode: undefined,\n\tsupportedMapTypes: undefined,\n\theading: 0,\n\tpushPins: undefined,\n\tdisableStreetside: true,\n\tinfoboxes: undefined,\n\tinfoboxesWithPushPins: undefined,\n\tzoom: undefined,\n\tgetLocation: undefined,\n\tregularPolygons: undefined,\n\tboundary: undefined,\n\tmapOptions: undefined,\n\tpolyline: undefined,\n\tdirections: undefined,\n\tmapHandlers: undefined\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}